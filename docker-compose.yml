services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:14-alpine
    container_name: todo-app-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      POSTGRES_DB: ${POSTGRES_DB:-todoapp}
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - todo-app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # バックエンドアプリケーション
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    container_name: todo-app-backend
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD:-postgres}@postgres:5432/${POSTGRES_DB:-todoapp}
      JWT_SECRET: ${JWT_SECRET:-your-secret-key}
      PORT: ${PORT:-5000}
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "${PORT:-5000}:${PORT:-5000}"
    networks:
      - todo-app-network
    command: npm run dev

  # PGAdminツール 
  pgadmin:
    image: dpage/pgadmin4
    container_name: todo-app-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@example.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - todo-app-network
    depends_on:
      - postgres

networks:
  todo-app-network:
    driver: bridge

volumes:
  postgres-data:
  pgadmin-data:
